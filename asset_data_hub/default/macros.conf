[network_index]
definition = index=network
iseval = 0

[compliance_index]
definition = index=compliance
iseval = 0

[networkauth_index]
definition = index=network_auth
iseval = 0

[solarwinds_index]
definition = index=solarwinds
iseval = 0

[tanium_list_hardware]
disabled = 1
definition = index=tanium sourcetype="tanium:connect:syslog" Question_Name="Splunk-CPU-MEM" | eval tanium_date=strftime(_time,"%F")| rename host as computer | rename Computer_Name as tanium_fqdn, CPU as tanium_cpu, CPU_Speed as tanium_cpuspeed, Total_Physical_Processors as tanium_cpu_physicalprocessors, Total_Cores as tanium_cpucores,  Total_Logical_Processors as tanium_cpu_logicalprocessors, RAM as tanium_memoryram, Used_Memory as tanium_memoryused | rex field=tanium_fqdn "^(?<tanium_host>[\w\-\d]*)(?:\.(?<tanium_domain>[^\s]+)|\.|$)" | rename tanium_host as host | fields - tanium_fqdn tanium_domain| eval host=lower(host), tanium_cpu=lower(tanium_cpu), tanium_cpuspeed=lower(tanium_cpuspeed), tanium_cpu_physicalprocessors=lower(tanium_cpu_physicalprocessors), tanium_cpucores=lower(tanium_cpucores), tanium_cpu_logicalprocessors=lower(tanium_cpu_logicalprocessors), tanium_ram=lower(tanium_ram), tanium_usedmem=lower(tanium_usedmem) | fields - _time | table host tanium*
iseval = 0

[tanium_list_discover]
disabled = 1
definition = index=tanium sourcetype="tanium:connect:syslog" Question_Name="Tanium-Discover" \
	| rename MacAddress as tanium_mac, IpAddress as tip2, HostName as tanium_fqdn, TaniumComputerId as tanium_id \
	| rex field=tanium_fqdn "^(?<tanium_host>[\w\-\d]*)(?:\.(?<domain>.*)|$)" \
	| replace "*-*-*-*-*-*" with "******" in tanium_mac \
	| eval tanium_discover=strftime(_time,"%F"), tanium_mac=lower(tanium_mac), tanium_host=lower(tanium_host), tanium_fqdn=lower(tanium_fqdn) \
	| fields - _time host \
	| rename tanium_host as host, domain as tanium_domain \
	| stats values(tanium*) as tanium*, values(tip2) as tip2 by host \
	| eval tip2=mvjoin(tip2," "), tanium_mac=mvjoin(tanium_mac," "), tanium_sub=mvjoin(tanium_sub," ") \
	| eval tanium=1
iseval = 0

[tanium_list_asset]
disabled = 1
definition = index=tanium sourcetype="tanium:connect:syslog" Question_Name="Splunk-Ultimate-Asset-SSRS" \
	| rename host as hostx, Tanium_AD_OU as tanium_ou, Computer_Name as tanium_fqdn, Computer_Serial_Number as tanium_serial, Computer_Type as tanium_type, Days_Since_Last_Used as tanium_usage, IPv4_Address as tip1, Is_VDI as tanium_vdi, Is_Virtual as tanium_virtual, MAC_Address as tanium_mac, Manufacturer as tanium_manufacturer, Model as tanium_model, Operating_System as tanium_os, Tanium_Client_Subnet as tanium_sub, Uptime as tanium_uptime, Username as tanium_username, Full_User_Name as tanium_fulluser, Computer_ID as tanium_id, \
	| eval tanium_serial=lower(tanium_serial), tanium_fulluser=lower(tanium_fulluser), tanium_id=lower(tanium_id), tanium_vdi=lower(tanium_vdi), tanium_ou=lower(tanium_ou), tanium_os=lower(tanium_os), tanium_type=lower(tanium_type), tanium_fqdn=lower(tanium_fqdn), tanium_mac=lower(tanium_mac), tanium_manufacturer=lower(tanium_manufacturer), tanium_model=lower(tanium_model), tanium_type=lower(tanium_type), tanium_username=lower(tanium_username), tanium_virtual=lower(tanium_virtual), tanium=1, tanium_host=lower(tanium_host) \
	| rex field=tanium_fqdn "^(?<tanium_host>[\w\-\d]*)(?:\.(?<tanium_domain>[^\s]+)|\.|$)" \
	| replace "*:*:*:*:*:*" with "******" in tanium_mac \
	| eval tanium_date=strftime(_time,"%F") \
	| fields tanium* tip* _time\
	\
	| replace "*-days" with * in tanium_uptime \
	| replace "Less-than-1-day" with "1" in tanium_uptime \
	| rename tanium_host as host \
	\
	| stats latest(tanium*) as tanium*, latest(tip*) as tip* by host \
	| eval tip1=mvjoin(tip1," "), tanium_mac=mvjoin(tanium_mac," "), tanium_sub=mvjoin(tanium_sub," ")
iseval = 0

[asset_list_security]
disabled = 1
definition = index="security" source="Users and Computers Hourly Summary" computer=* | eval computer=lower(computer), date=strftime(_time,"%F") | rex field=computer "(?<host>.*)\$" | stats latest(date) as security_date values(src_ip) as security_ip by host | eval security_ip=mvjoin(security_ip," ") | eval security=1
iseval = 0

[asset_list_acas]
definition = `compliance_index` sourcetype=tenable:sc:vuln | rename "host" as machine, "dnsName" as fqdn |  rex field=ip "^(?<subnet>\d{1,3}\.\d{1,3}\.\d{1,3})" | eval subnet=subnet.".X" | rex field=fqdn "^(?<host>[\w\-\d]*)\.(?<domain>.*)" | rename "netbiosName" as netbios | rex field=netbios "^[\w\-\d]*\\\\(?<nethost>.*)" | eval host=if(like(host, "host-%"),NULL,lower(host)), domain=if(like(domain, "%ptr.%"),NULL,domain), fqdn=if(like(fqdn, "%.ptr.%"),NULL,fqdn) | eval host=if(netbios="", lower(host), lower(nethost)) | rename "macAddress" as mac| replace "*:*:*:*:*:*" with "******" in mac | fillnull value=NULL host | search host!=NULL | stats last(lastSeen) as lastSeen last(ip) as ip last(subnet) as subnet values(mac) as acas_mac values(fqdn) as acas_fqdn count by host severity | eval info=if(severity="informational",count,0), low=if(severity="low",count,0), medium=if(severity="medium",count,0), high=if(severity="high",count,0), critical=if(severity="critical",count,0) | stats sum(info) as acas_info sum(low) as acas_low sum(medium) as acas_med sum(high) as acas_high sum(critical) as acas_crit sum(count) as acas_total last(lastSeen) as lastSeen last(ip) as acas_ip latest(subnet) as acas_subnet values(acas_mac) as acas_mac values(acas_fqdn) as acas_fqdn by host | eval acas=1 | bucket lastSeen span=1d | sort 0 -lastSeen | eval acas_date=strftime(lastSeen,"%m/%d/%y") | fields - lastSeen
disabled = 1
iseval = 0

[applications]
disabled = 1
definition = index=tanium sourcetype=tanium:connect:syslog  Question_Name="Splunk-Computer-Name-and-Installed-Applications" |   rex field=Computer_Name "^(?<host>[\w\-\d]*)(?:\.(?<domain>.*)|$)" | rename  IPv4_Address as ip, Name as application, Operating_System as os, Version as version| fields host domain ip date application os version   | stats list(version) as version, list(application) as application, values(domain) as domain, values(ip) as ip, values(os) as os, latest(_time) as date by host | eval app1=mvzip(application, version, "__") | eval host=lower(host), app1=lower(app1), domain=lower(domain), ip=lower(ip), os=lower(os) | eval date=strftime(date,"%F") | fields - version application
iseval = 0

[asset_list_dhcp]
disabled = 1
definition = sourcetype=DhcpSrvLog index=windows msdhcp_id=11 OR msdhcp_id=10 |  eval dhcp_date=strftime(_time,"%F") | fields dest_mac, dest_nt_host, dest_ip dhcp_date | rename dest_mac AS mac dest_nt_host as fqdn dest_ip as ip | eval mac=lower(mac), fqdn=lower(fqdn) | rex field=fqdn "^(?<host>[\w\-\d]*)\.(?<domain>.*)" | stats values(mac) as dhcp_mac values(ip) as dhcp_ip, first(fqdn) as dhcp_fqdn latest(dhcp_date) as dhcp_date, first(domain) as dhcp_domain by host | eval dhcp_mac=mvjoin(dhcp_mac," "), dhcp_ip=mvjoin(dhcp_ip," ") | eval dhcp=1
iseval = 0

[acas_vuln]
definition = index=compliance sourcetype=tenable:sc:vuln
iseval = 0

[hbss_compliance]
definition = index=compliance sourcetype=mcafee:compliance
iseval = 0

[hbss_dlp]
definition = index=compliance sourcetype=mcafee:dlp
iseval = 0

[wef_index]
definition = index=wef
iseval = 0

[asset_list_update]
definition = inputlookup append=true asset_list.csv \
	| stats first(os*) as os* \
	first(ad*) as ad* \
	first(splunk*) as splunk* \
	first(sccm*) as sccm* \
	first(hbss*) as hbss* \
	first(acas*) as acas* \
	first(cylance*) as cylance* \
	first(bluecoat*) as bluecoat*\
	first(ise*) as ise*\
	first(solarwinds*) as solarwinds*\
	first(vmware*) as vmware* by host\
	| eval fqdn=case(isnotnull(splunk_fqdn) AND strptime(splunk_date,"%F")>=now()-(60*60*24*30),splunk_fqdn, \
	isnotnull(hbss_fqdn) AND strptime(hbss_date,"%F")>=now()-(60*60*24*30),hbss_fqdn, \
	isnotnull(sccm_fqdn) AND strptime(sccm_date,"%F")>=now()-(60*60*24*30),sccm_fqdn, \
	isnotnull(acas_fqdn) AND strptime(acas_date,"%F")>=now()-(60*60*24*30),acas_fqdn, \
	isnotnull(hbss_fqdn),hbss_fqdn,\
	isnotnull(sccm_fqdn),sccm_fqdn, \
	isnotnull(acas_fqdn),acas_fqdn, \
	isnotnull(cylance_fqdn),cylance_fqdn,\
	isnotnull(ise_fqdn) AND strptime(ise_date,"%F")>=now()-(60*60*24*30),ise_fqdn,\
	isnotnull(vmware_fqdn) AND strptime(vmware_date,"%F")>=now()-(60*60*24*30),vmware_fqdn,\
	isnotnull(solarwinds_fqdn) AND strptime(solarwinds_date,"%F")>=now()-(60*60*24*30),solarwinds_fqdn)\
	| eval ip=case(isnotnull(splunk_ip) AND strptime(splunk_date,"%F")>=now()-(60*60*24*3),splunk_ip, \
	isnotnull(acas_ip) AND strptime(acas_date,"%F")>=now()-(60*60*24*3),acas_ip, \
	isnotnull(hbss_ip) AND strptime(hbss_date,"%F")>=now()-(60*60*24*3),hbss_ip,\
	isnotnull(bluecoat_ip) AND strptime(bluecoat_date,"%F")>=now()-(60*60*24*180),bluecoat_ip,\
	isnotnull(acas_ip),acas_ip, \
	isnotnull(hbss_ip),hbss_ip, \
	isnotnull(cylance_ip),cylance_ip, \
	isnotnull(bluecoat_ip),bluecoat_ip, \
	isnotnull(ise_ip) AND strptime(ise_date,"%F")>=now()-(60*60*24*30),ise_ip,\
	isnotnull(vmware_ip) AND strptime(vmware_date,"%F")>=now()-(60*60*24*30),vmware_ip,\
	isnotnull(solarwinds_ip) AND strptime(solarwinds_date,"%F")>=now()-(60*60*24*30),solarwinds_ip)\
	| eval mac=case(isnotnull(hbss_mac) AND strptime(hbss_date,"%F")>=now()-(60*60*24*30),hbss_mac, \
	isnotnull(sccm_mac) AND strptime(sccm_date,"%F")>=now()-(60*60*24*30),sccm_mac, \
	isnotnull(acas_mac) AND strptime(acas_date,"%F")>=now()-(60*60*24*30),acas_mac, \
	isnotnull(hbss_mac),hbss_mac,\
	isnotnull(sccm_mac),sccm_mac, \
	isnotnull(acas_mac),acas_mac, \
	isnotnull(cylance_mac),cylance_mac, \
	isnotnull(ise_mac) AND strptime(ise_date,"%F")>=now()-(60*60*24*30),ise_mac,\
	isnotnull(solarwinds_mac) AND strptime(solarwinds_date,"%F")>=now()-(60*60*24*30),solarwinds_mac)\
	| eval domain=case(isnotnull(ad_domain), ad_domain, \
	isnotnull(hbss_domain) AND strptime(hbss_date,"%F")>=now()-(60*60*24*7),hbss_domain,  \
	isnotnull(sccm_domain) AND strptime(sccm_date,"%F")>=now()-(60*60*24*30),sccm_domain, \
	isnotnull(splunk_domain) AND strptime(splunk_date,"%F")>=now()-(60*60*24*30),splunk_domain,  \
	isnotnull(acas_domain) AND strptime(acas_date,"%F")>=now()-(60*60*24*30),acas_domain, \
	isnotnull(ise_domain) AND strptime(ise_date,"%F")>=now()-(60*60*24*30),ise_domain, \
	isnotnull(splunk_domain),splunk_domain,\
	isnotnull(hbss_domain),hbss_domain,\
	isnotnull(sccm_domain),sccm_domain, \
	isnotnull(acas_domain),acas_domain, \
	isnotnull(cylance_domain),cylance_domain,\
	isnotnull(vmware_domain) AND strptime(vmware_date,"%F")>=now()-(60*60*24*30),vmware_domain,\
	isnotnull(solarwinds_domain) AND strptime(solarwinds_date,"%F")>=now()-(60*60*24*30),solarwinds_domain)\
	| foreach *_date \
	[ eval <<FIELD>>_new=strptime(<<FIELD>>, "%F")] \
	| eval date=strftime(max(acas_date_new, sccm_date_new, splunk_date_new, cylance_date_new, bluecoat_date_new, ise_date_new, solarwinds_date_new, ad_date_new, hbss_date_new), "%F") \
	| fields - *_date_new
iseval = 0

[os_part]
definition = eval hbss_os_type=case(hbss_os LIKE "%linux%", "linux", hbss_os LIKE "%windows%", "windows", hbss_os LIKE "%mac%", "mac") \
	| rex field=hbss_os "\w+\s+(?<hbss_os_vers>\d+)" \
	| eval hbss_os_release=case(hbss_os LIKE "%r2%", "r2") \
	| eval hbss_os_vers=if(hbss_os LIKE "%os x%", "10", hbss_os_vers) \
	\
	| rex field=acas_os "^cpe:\/o:\D+(?<acas_os_num>\d+\S+)$" \
	| eval acas_os_num=if(acas_os LIKE "%ios:15%", "15", acas_os_num) \
	| eval acas_os_linux=case(acas_os LIKE "%redhat%", "redhat", acas_os LIKE "%ubuntu%", "ubuntu", acas_os LIKE "%freebsd%","freebsd", acas_os LIKE "%ibm%","ibm-aix", acas_os LIKE "%netbsd%", "netbsd", acas_os LIKE "%debian%", "debian", acas_os LIKE "%sunos%", "sunos") \
	| eval acas_os_type=case(acas_os LIKE "%mac%", "mac", acas_os LIKE "%linux%", "linux", acas_os LIKE "%cisco%", "cisco", acas_os LIKE "%hp-ux%", "hp-ux", acas_os LIKE "%windows%", "windows", acas_os LIKE "%netapp%", "netapp", acas_os LIKE "%netbsd%", "linux", acas_os LIKE "%ibm%", "linux", acas_os LIKE "%esx%", "esx", acas_os LIKE "%juniper%", "juniper", acas_os LIKE "%freebsd%", "linux", acas_os LIKE "%debian%", "linux", acas_os LIKE "%sunos%", "linux" ) \
	| eval acas_os2=acas_os_type."_".if(tostring(acas_os_num)="Null"," ",acas_os_num) \
	| eval acas_os_model=case(acas_os LIKE "%enterprise%", "enterprise", acas_os LIKE "%datacenter%", "datacenter", acas_os LIKE "%professional%", "professional", acas_os LIKE "%ultimate%", "ultimate", acas_os LIKE "%standard%", "standard") \
	| eval acas_os_pack=case(acas_os LIKE "%sp1%", "sp1", acas_os LIKE "%sp2%", "sp2", acas_os LIKE "%sp3%", "sp3") \
	| eval acas_os_release=case(acas_os LIKE "%r2%", "r2") \
	| eval acas_os_vers=case(acas_os2 LIKE "%windows_7%", "7", acas_os2 LIKE "%windows_10%", "10", acas_os2 LIKE "%2000%", "2000", acas_os2 LIKE "%2003%", "2003", acas_os2 LIKE "%2008%", "2008", acas_os2 LIKE "%2012%", "2012", acas_os2 LIKE "%2016%", "2016", acas_os2 LIKE "%vista%", "vista", acas_os2 LIKE "%xp%", "xp", acas_os2 LIKE "%mac%", acas_os_num, acas_os2 LIKE "%linux%", acas_os_num, acas_os2 LIKE "%cisco%", acas_os_num, acas_os2 LIKE "%hp_ux%", acas_os_num, acas_os2 LIKE "%netapp%", acas_os_num, acas_os2 LIKE "%netbsd%", acas_os_num, acas_os2 LIKE "%ibm%", acas_os_num, acas_os2 LIKE "%esx%", acas_os_num, acas_os2 LIKE "%juniper%", acas_os_num, acas_os2 LIKE "%freebsd%", acas_os_num) \
	| eval acas_os_vers=if(acas_os LIKE "%6::%", "6", acas_os_vers) \
	\
	| eval sccm_os=case(sccm_os LIKE "%mac%", sccm_os, sccm_os LIKE "%server 6.0%", "windows 2008", sccm_os LIKE "%emc%", "emc file server",sccm_os LIKE "%server 6.1%", "windows 2008 r2", sccm_os LIKE "%server 6.3%", "windows 2012 r2", sccm_os LIKE "%server 10.0%", "windows 2016", sccm_os LIKE "%server 6.2%", "windows 2012", sccm_os LIKE "%workstation 10%", "windows 10", sccm_os LIKE "%workstation 6.1%", "windows 7", sccm_os LIKE "%workstation 6.2%", "windows 8", sccm_os LIKE "%workstation 6.3%", "windows 8.1") \
	| eval sccm_os_type=case(sccm_os LIKE "%mac%", "mac", sccm_os LIKE "%emc%", "emc file server", sccm_os LIKE "%windows%", "windows") \
	| rex field=sccm_os "\w+\s+(?<sccm_os_vers>\d+)" \
	| eval sccm_os_release=case(sccm_os LIKE "%r2%", "r2") \
	| rex field=sccm_os "x\s(?<sccm_os_vers>\d+\.\d+\.\d+)"\
	\
	| eval ad_os_type=case(ad_os LIKE "%mac%", "mac", ad_os LIKE "%windows%", "windows") \
	| rex field=ad_os "\w+\s+(?<ad_os_vers>\d+)" \
	| eval ad_os_release=case(ad_os LIKE "%r2%", "r2" ) \
	| eval ad_os_model=case(ad_os LIKE "%enterprise%", "enterprise", ad_os LIKE "%datacenter%", "datacenter", ad_os LIKE "%professional%", "professional", ad_os LIKE "%ultimate%", "ultimate", ad_os LIKE "%standard%", "standard")
iseval = 0

[asset_list_description]
# Fix this with a new thing
definition = rex field=host " " | eval description=case(isnotnull(host_field),"Workstation") | fields - host_*
iseval = 0
disabled = 1

[asset_list_hbss(1)]
args = filename
definition = inputlookup append=true $filename$ | rename "DNS Name" as fqdn "Last Communication" as last_seen "MAC Address" as mac "System Name" as host | rex field="IP Address" "^(?<subnet>\d{1,3}\.\d{1,3}\.\d{1,3})" | eval subnet=subnet.".X" | eval fqdn=lower(fqdn), mac=lower(mac), host=lower(host)| rex field=fqdn "^(?<nhost>[\w\-\d]*)\.(?<domain>.*)" | eval hbss=1, _time=strptime(last_seen, "%m/%d/%y %I:%M:%S %p") | bucket _time span=1d | sort 0 -_time | eval date=strftime(_time,"%m/%d/%y") | stats first("IP Address") as hbss_ip, values(subnet) as hbss_subnet, first(date) as hbss_date, values(hbss) as hbss, first(mac) as hbss_mac, first(fqdn) as hbss_fqdn, first("User Name") as hbss_last_user, first(Vdi) as hbss_vdi, first("OS Type") as hbss_os by host | eval hbss_vdi=if(hbss_vdi="No" OR isnull(hbss_vdi),null(),1)
iseval = 0
disabled = 1

[asset_list_sccm(1)]
args = filename
definition = inputlookup append=true $filename$ |  rename Name as host, Manufacturer as sccm_manufacturer, Model as sccm_model, "Serial Number" as sccm_serial_number, "CPU Info" as sccm_cpu_info, "Operating System" as sccm_os, "Service Pack Level" as sccm_service_pack, Domain as domain, "IP Address" as ip_list, MAC as sccm_mac | eval host=lower(host), domain=lower(domain), sccm_mac=lower(sccm_mac), ip_list=lower(ip_list) | rex field=ip_list "(?<sccm_ip6>\w+:[\w:]+)" max_match=0 | rex field=ip_list "(?<sccm_ip>\w+\.[\w\.]+)" max_match=0 | eval sccm_fqdn=host.".".domain | rex field=sccm_ip "^(?<subnet>\d{1,3}\.\d{1,3}\.\d{1,3})" | eval subnet=subnet.".X" | rename subnet as sccm_subnet | replace "*:*:*:*:*:*" with "******" in sccm_mac | eval sccm_mac_with_ip=if(isnotnull(sccm_mac) AND isnotnull(ip_list),sccm_mac,null()) | eval sccm=1, _time=now() | bucket _time span=1d | sort 0 -_time | eval sccm_date=strftime(_time,"%m/%d/%y") | stats values(sccm*) as sccm* by host
iseval = 0
disabled = 1

[acas_list_update]
# This needs fixing line 212 "mydomain"
definition = search `compliance_index` sourcetype=tenable*\
	| rex field=pluginText "The remote operating system matched.*\n\n\s+(?<os>cpe:\/o:[^\s]+)"\
	| eventstats values(os) as os by ip\
	| stats first(repository.name) as acas_repo, first(firstSeen) as acas_firstseen, first(lastSeen) as acas_date, first(macAddress) as acas_mac, first(dnsName) as acas_dnsname, first(netbiosName) as acas_netbiosname, first(os) as acas_os by ip\
	| replace "*:*:*:*:*:*" with "******" in acas_mac\
	| eval acas_firstseen=strftime(acas_firstseen, "%F"), acas_date=strftime(acas_date, "%F"), acas_repo=lower(acas_repo), acas_dnsname=lower(acas_dnsname), acas_netbiosname=lower(acas_netbiosname), acas_os=lower(acas_os)\
	| rex field=acas_dnsname "^(?<acas_dnsname1>[^.]+)\.(?<acas_domain1>\S+)"\
	| rex field=acas_netbiosname "^(?<acas_domain2>\S+)\\\(?<acas_netbiosname1>\S+)"\
	| rex field=acas_netbiosname1 "^(?<acas_host>[^.]+)\.(?<acas_domain3>\S+)"\
	| eval host=case(isnull(acas_host), acas_netbiosname1, isnotnull(acas_domain3), acas_host, isnull(acas_host) AND isnull(acas_netbiosname1), acas_dnsname1, isnull(acas_netbiosname1) AND isnull(acas_host) AND isnull(acas_dnsname1), null())\
	| eval acas_domain2=case(acas_domain2="mydomain", "mydomain.com",true(), acas_domain2)\
	| eval acas_domain=case(isnotnull(acas_domain3), acas_domain3, isnotnull(acas_domain2) AND acas_domain2 LIKE "%.%", acas_domain2, isnotnull(acas_domain1), acas_domain1, isnull(acas_domain1) AND isnull(acas_domain3), acas_domain2, isnull(acas_domain3) AND isnull(acas_domain1) AND isnull(acas_domain2),null())\
	| where isnotnull(host)\
	| fields - acas_dnsname acas_netbiosname acas_dnsname1 acas_domain1 acas_domain2 acas_netbiosname1 acas_domain3 acas_host\
	| eval acas=1 \
	| rename ip as acas_ip
disabled = 0
iseval = 0

[asset_list_update_old]
definition = inputlookup append=true asset_list.csv | stats first(sccm*) as sccm* first(tanium*) as tanium* first(hbss*) as hbss* first(dhcp*) as dhcp* first(security*) as security* first(acas*) as acas* by host | fillnull value=" " | eval fqdn=acas_fqdn." ".dhcp_fqdn." ".hbss_fqdn." ".sccm_fqdn." ".tanium_fqdn, ip=acas_ip." ".dhcp_ip." ".hbss_ip." ".security_ip." ".tanium_ip, mac=acas_mac." ".dhcp_mac." ".hbss_mac." ".tanium_mac, subnet=acas_subnet." ".dhcp_subnet." ".hbss_subnet." ".sccm_subnet." ".security_subnet." ".tanium_subnet | makemv delim=" " fqdn | makemv delim=" " ip | makemv delim=" " mac | makemv delim=" " last_user | makemv delim=" " subnet | rex field=fqdn "^[\w\-\d]*\.(?<domain>.*)" | stats values(*) as * by host | foreach * [eval <<FIELD>>=if(<<FIELD>>==" ",null(),<<FIELD>>)] | foreach *_date [eval <<FIELD>>_new=strptime(<<FIELD>>, "%m/%d/%Y")] | eval date=strftime(max(acas_date_new,dhcp_date_new,hbss_date_new,sccm_date_new,security_date_new,tanium_date_new), "%m/%d/%Y") | fields - *_date_new
iseval = 0
disabled = 1

[GPO_LDAP_Search]
definition = | ldapsearch domain="x" search="(objectClass=groupPolicyContainer)" attrs="displayName, cn, distinguishedName, objectGUID, whenChanged, whenCreated" \
	| search displayName="*" \
	| table displayName, cn, distinguishedName, objectGUID, whenChanged, whenCreated\
	|  rename cn as gpo_id, distinguishedName as gpo_ou,  whenChanged as gpo_change, whenCreated as gpo_creation, displayName as gpo_name, objectGUID, as gpo_guid\
	| rex field=gpo_change "^(?<gpo_change>\d{14})"\
	| eval gpo_change=strptime(gpo_change, "%Y%m%d%H%M%S")\
	| eval gpo_change=gpo_change-14400\
	| eval gpo_change=strftime(gpo_change, "%F"." "."%T")\
	| eval gpo_creation=strptime(gpo_creation, "%Y%m%d%H%M%S")\
	| eval gpo_creation=gpo_creation-14400\
	| eval gpo_creation=strftime(gpo_creation, "%F"." "."%T")\
	| eval gpo_domain="x"
disabled = 1
iseval = 0

[Raw_Acas_search]
definition = | tstats values(netbiosName) as netbiosName, max(lastSeen) as lastSeen, values(dnsName) as dnsName, values(macAddress) as macAddress\
	where index=nessus AND source="cumulative" AND sourcetype="tenable:sc:vuln" AND ((Critical OR High OR Low OR Medium) AND "severity.id"!=0) OR ("severity.id"=0 AND (pluginID="19506" OR pluginID="45590"))\
	by ip port repository.name pluginName pluginText pluginID severity.id firstSeen\
	| rex field=pluginText "The remote operating system matched.*\n\n\s+(?<os>cpe:\/o:[^\s]+)"\
	| eventstats values(os) as os by ip\
	| stats first(repository.name) as acas_repo, first(firstSeen) as acas_firstseen, first(lastSeen) as acas_date, first(macAddress) as acas_mac, first(dnsName) as acas_dnsname, first(netbiosName) as acas_netbiosname, first(os) as acas_os by ip\
	| replace "*:*:*:*:*:*" with "******" in acas_mac\
	| eval acas_firstseen=strftime(acas_firstseen, "%F"), acas_date=strftime(acas_date, "%F"), acas_repo=lower(acas_repo), acas_dnsname=lower(acas_dnsname), acas_netbiosname=lower(acas_netbiosname), acas_os=lower(acas_os)\
	| rex field=acas_dnsname "^(?<acas_dnsname1>[^.]+)\.(?<acas_domain1>\S+)"\
	| rex field=acas_netbiosname "^(?<acas_domain2>\S+)\\\(?<acas_netbiosname1>\S+)"\
	| eval host=case(isnotnull(acas_netbiosname1), acas_netbiosname1, isnull(acas_netbiosname1), acas_dnsname1, isnull(acas_netbiosname1) AND isnull(acas_dnsname1), null())\
	| eval acas_domain=case(isnotnull(acas_acas_domain1), acas_domain1, isnull(acas_acas_domain1), acas_domain2, isnull(acas_domain2) AND isnull(acas_domain1), null())
disabled = 1
iseval = 0

[acas_list_update_manual]
definition = inputlookup acas_assets.csv | inputlookup append=true all_nipr_vulnerabilities.csv | lookup acas_ip_summary.csv "IP Address" OUTPUT "OS CPE" | rename "DNS Name" as fqdn | rex field=fqdn "^(?<host>[\w\-\d]*)\.(?<domain>.*)" | rename "NetBIOS Name" as netbios | rex field=netbios "^[\w\-\d]*\\\\(?<nethost>.*)" | eval host=if(like(host, "host-%"),NULL,lower(host)), domain=if(like(domain, "%ptr.%"),NULL,domain), fqdn=if(like(fqdn, "%.ptr.%"),NULL,fqdn) | eval host=if(netbios="", lower(host), lower(nethost)) | rename "MAC Address" as acas_mac, "IP Address" as acas_ip, "Last Observed" as acas_date, "OS CPE" as acas_os, Repository as acas_repository, domain as acas_domain, fqdn as acas_fqdn | replace "*:*:*:*:*:*" with "******" in acas_mac | eval acas_repository=lower(acas_repository) | eval acas_date=strptime(acas_date, "%b %d, %Y") | sort 0 - acas_date | eval acas_date=strftime(acas_date, "%F") | fields host acas* | stats first(acas_date) as acas_date, values(acas_domain) as acas_domain, values(acas_fqdn) as acas_fqdn, values(acas_ip) as acas_ip, values(acas_mac) as acas_mac, first(acas_os) as acas_os, values(acas_repository) as acas_repository by host | eval acas=1 | eval acas_mac=mvjoin(acas_mac," "), acas_ip=mvjoin(acas_ip, " ")
disabled = 1
iseval = 0

[ad_user_ldap]
definition = ldapsearch search="(objectClass=user)" attrs="cn, company, department, displayName, distinguishedName, employeeID, employeeType, givenName, homeDirectory, initials, lastLogonTimestamp, mail, name, objectSid, sAMAccountName, sn, uid, userAccountControl, userPrincipalName, whenChanged, whenCreated"\
	| search cn="*" \
	| table cn, company, department, displayName, distinguishedName, employeeID, employeeType, givenName, homeDirectory, initials, lastLogonTimestamp, mail, name, objectSid, sAMAccountName, sn, uid, userAccountControl, userPrincipalName, whenChanged, whenCreated, _time
iseval = 0

[asset_list_hbss]
definition = `compliance_index` sourcetype="mcafee:assets" latest=now()\
	| rename ComputerName as host, IPAddress as hbss_ip, NetAddress as hbss_mac, OSType as hbss_os, CPUType as hbss_cpu, OSPlatform as hbss_platform, IPHostName as hbss_fqdn \
	| eval hbss_cpu=lower(hbss_cpu), hbss_fqdn=lower(hbss_fqdn), hbss_os=lower(hbss_os), hbss_platform=lower(hbss_platform), hbss_mac=lower(hbss_mac) \
	| rex field=hbss_fqdn "^(?<hbss_host>[\w\-\d]*)(?:\.(?<hbss_domain>.*)|$)" \
	| stats latest(_time) as _time, first(hbss_cpu) as hbss_cpu, first(hbss_fqdn) as hbss_fqdn, first(hbss_domain) as hbss_domain, values(hbss_ip) as hbss_ip, first(hbss_os) as hbss_os, first(hbss_platform) as hbss_platform, values(hbss_mac) as hbss_mac by hbss_host  \
	| eval hbss=1 \
	| rename hbss_host as host \
	| eval host=lower(host)\
	| eval hbss_date=strftime(_time,"%F") \
	| eval hbss_ip=mvjoin(hbss_ip," "), hbss_mac=mvjoin(hbss_mac," ") \
	| fields - _time
iseval = 0

[asset_list_os]
definition = | inputlookup asset_list_base.csv | rex field=acas_os "^cpe:\/o:\D+(?<acas_os_num>\d+\S+)$" | eval acas_os_type=case(acas_os LIKE "%mac%", "mac", acas_os LIKE "%linux%", "linux", acas_os LIKE "%cisco%", "cisco", acas_os LIKE "%hp-ux%", "unix", acas_os LIKE "%windows%", "windows", acas_os LIKE "%netapp%", "netapp", acas_os LIKE "%netbsd%", "netbsd", acas_os LIKE "%ibm%", "ibm", acas_os LIKE "%esx%", "esx", acas_os LIKE "%juniper%", "juniper", acas_os LIKE "%freebsd%", "freebsd" ) | eval acas_os2=acas_os_type."_".if(tostring(acas_os_num)="Null"," ",acas_os_num) | eval acas_os_model=case(acas_os LIKE "%enterprise%", "enterprise", acas_os LIKE "%datacenter%", "datacenter", acas_os LIKE "%professional%", "professional", acas_os LIKE "%ultimate%", "ultimate", acas_os LIKE "%standard%", "standard")  | eval acas_os_pack=case(acas_os LIKE "%sp1%", "sp1", acas_os LIKE "%sp2%", "sp2", acas_os LIKE "%sp3%", "sp3", acas_os LIKE "%xp%","xp", acas_os LIKE "%vista%" , "vista") | eval acas_os_release=case(acas_os LIKE "%r2%", "r2") | eval acas_os_vers=case(acas_os2 LIKE "%windows_7%", "7", acas_os2 LIKE "%windows_10%", "10", acas_os2 LIKE "%2000%", "2000", acas_os2 LIKE "%2003%", "2003", acas_os2 LIKE "%2008%", "2008", acas_os2 LIKE "%2012%", "2012", acas_os2 LIKE "%vista%", "vista", acas_os2 LIKE "%xp%", "xp", acas_os2 LIKE "%mac%", acas_os_num, acas_os2 LIKE "%linux%", acas_os_num, acas_os2 LIKE "%cisco%", acas_os_num, acas_os2 LIKE "%unix%", acas_os_num, acas_os2 LIKE "%netapp%", acas_os_num, acas_os2 LIKE "%netbsd%", acas_os_num, acas_os2 LIKE "%ibm%", acas_os_num, acas_os2 LIKE "%esx%", acas_os_num, acas_os2 LIKE "%juniper%", acas_os_num, acas_os2 LIKE "%freebsd%", acas_os_num) | fillnull value=" " acas_os_type acas_os_vers acas_os_model acas_os_release acas_os_pack | eval acas_os_main=acas_os_type." ".acas_os_vers." ".acas_os_model." ".acas_os_release." ".acas_os_pack  |
iseval = 0

[asset_list_ou]
definition = rex field=ad_ou "^cn=.+?\,(?<ad_ou2>.*?)\,dc=.*" \
	| rex field=sccm_ou "^cn=.+?\,(?<sccm_ou2>.*?)\,dc=.*" \
	| rex field=tanium_ou "^cn=.+?\,(?<tanium_ou2>.*?)\,dc=.*"  | eval ou=case(isnotnull(ad_ou2), ad_ou2, isnotnull(tanium_ou2), tanium_ou2, isnotnull(sccm_ou2), sccm_ou2)  | eval ou_t1=mvindex(split(ou,","),-1) | rex field=ou_t1 "^ou=(?<ou_t1>.*)" | eval ou_t2=mvindex(split(ou,","),-2) | rex field=ou_t2 "^ou=(?<ou_t2>.*)" | eval ou_t3=mvindex(split(ou,","),-3) | rex field=ou_t3 "^ou=(?<ou_t3>.*)" | eval ou_t4=mvindex(split(ou,","),-4) | rex field=ou_t4 "^ou=(?<ou_t4>.*)" | eval ou_t5=mvindex(split(ou,","),-5) | rex field=ou_t5 "^ou=(?<ou_t5>.*)" | eval ou_t6=mvindex(split(ou,","),-6) | rex field=ou_t6 "^ou=(?<ou_t6>.*)" | eval ou_t7=mvindex(split(ou,","),-7) | rex field=ou_t7 "^ou=(?<ou_t7>.*)" | eval ou_t8=mvindex(split(ou,","),-8) | rex field=ou_t8 "^ou=(?<ou_t8>.*)" | fillnull value=" " ou_t1 ou_t2 ou_t3 ou_t4 ou_t5 ou_t6 ou_t7 ou_t8 | eval ou1=ou_t1."_".ou_t2."_".ou_t3."_".ou_t4."_".ou_t5."_".ou_t6."_".ou_t7."_".ou_t8 | replace " _ _ _ _ _ _ _ " with "n/a" in ou1 | fields - sccm_ou2 tanium_ou2 ad_ou2 ou
iseval = 0

[asset_subnet_update]
definition = | inputlookup append=true asset_list.csv | fillnull value="null" ip | rex max_match=0 field=ip "(?<ip2>\S+)(?:\s|$)" | mvexpand ip2 | lookup asset_sub Subnet as ip2 OUTPUT  vrf Subnet Location| stats values(*) as * by host | fields - ip2 | replace "null" with " " in ip | rename vrf as sub_vrf, Subnet as sub_subnet, Location as sub_location
iseval = 0

[msl_update]
definition = inputlookup append=true msl.csv \
	| eval APPSPatchedBy=lower(APPSPatchedBy), "System POC"=lower('System POC'), "CCRI Tech Area"=lower('CCRI Tech Area'), "Backup Solution"=lower('Backup Solution'), Application=lower(Application), "FQDN/DNS Name"=lower('FQDN/DNS Name'), "Item Type"=lower('Item Type'), Management=lower(Management), Path=lower(Path), "Service Level"=lower('Service Level'), "Service Type"=lower('Service Type'), DeviceType=lower(DeviceType), Agency=lower(Agency), AltName=lower(AltName), AssetTag=lower(AssetTag), Backups=Lower(Backups), Branch=lower(Branch), CPU=lower(CPU), CRQs=lower(CRQs), Class=lower(Class), Description=lower(Description), Domain=lower(Domain), FQDN=lower(FQDN), Firmware=lower(Firmware), Hostname=lower(Hostname), IPs=lower(IPs), Location=lower(Location), MACs=lower(MACs), MANDOM=lower(MANDOM), ManIP=lower(ManIP), Memory=lower(Memory), MetaNotes=lower(MetaNotes), Monitoring=lower(Monitoring), Notes=lower(Notes), OS=lower(OS), OSPatchedBy=lower(OSPatchedBy), Order=lower(Order), Parent=lower(Parent), PatchPhase=Lower(PatchPhase), Power=lower(Power), Project=lower(Project), Purpose=lower(Purpose), Room=lower(Room), Serials=lower(Serials), Service=lower(Service), Site=lower(Site), Status=lower(Status), Storage=lower(Storage), SubLoc=lower(SubLoc), SubType=lower(SubType), Team=lower(Team), Type=lower(Type), UUID=Lower(UUID), VDate=lower(VDate), VSource=lower(VSource), Vendor=lower(Vendor), "PatchPhase-Old"=lower('PatchPhase-Old'), Accreditation=lower(Accreditation), "Agency/System Owner"=lower('Agency/System Owner'), "DNS Suffix"=lower('DNS Suffix'), "Decom Date"=lower('Decom Date'), "NOTIFICATION (Incidents/escalations)"=lower('NOTIFICATION (Incidents/escalations)'), "NOTIFICATION (Patching and Maintenance)"=lower('NOTIFICATION (Patching and Maintenance)') \
	| eval msl=1 \
	| replace "*:*:*:*:*:*" with "******" in MACs \
	| rename Application as msl_application, "System POC" as msl_app_gov, "FQDN/DNS Name" as msl_fqdn, "Item Type" as msl_item, Management as msl_management, Path as msl_path, "Service Level" as msl_slevel, "Service Type" as msl_stype, APPSPatchedBy as msl_appspatchedby, "CCRI Tech Area" as ms_ccri_tech, "Backup Solution" as msl_backup_solution, Agency as msl_agency, AssetTag as msl_assettag, Backups as msl_backups, Branch as msl_branch, CPU as msl_cpu, CRQs as msl_crqs, Class as msl_class, Description as msl_description, DeviceType as msl_devicetype, Domain as msl_domain, Firmware as msl_firmware, IPs as msl_ip, Hostname as msl_host, AltName as msl_alt, Location as msl_location, MACs as msl_mac, MANDOM as msl_mandom, ManIP as msl_manip, Memory as msl_memory, MetaNotes as msl_metanotes, Monitoring as msl_monitoring, Notes as msl_notes, OS as msl_os, OSPatchedBy as msl_ospatchedby, Order as msl_order, "Owner/POC" as msl_poc, Parent as msl_parent, "PatchPhase-Old" as msl_patchphase, Power as msl_power, Project as msl_project, Purpose as msl_purpose, Room as msl_room, Serials as msl_serial, Service as msl_service, Site as msl_site, Status as msl_status, Storage as msl_storage, SubLoc as msl_subloc, SubType as msl_subtype, Team as msl_team, Type as msl_type, UUID as msl_uuid, VDate as msl_vdate, VSource as msl_vsource, Vendor as msl_vendor, Accreditation as msl_accreditation, "Agency/System Owner" as msl_sysowner, "DNS Suffix" as msl_dns_suffix, "Decom Date" as msl_decom_date, "NOTIFICATION (Incidents/escalations)" as msl_notification_incident_escalate, "NOTIFICATION (Patching and Maintenance)" as msl_notification_patch_maint\
	\
	| rex field=msl_fqdn "^(?<msl_host1>[^.]+)\.(?<domain>.*)" \
	| eval host=case(isnotnull(msl_host1), msl_host1, isnotnull(msl_alt), msl_alt, isnotnull(msl_host), msl_host) \
	| eval msl_domain=if(isnull(msl_domain),domain,msl_domain)\
	|  fields - domain msl_host1 Impact Order1 | outputlookup asset_list_msl.csv\
	iseval = 0

[sccm_list_heartbeat]
definition = `compliance_index` sourcetype=microsoft:sccm:agent AgentName="Heartbeat Discovery" | eval sccm_date=strptime(AgentTime, "%Y-%m-%d" ) | rename ResourceId as sccm_id2, host as name | fields sccm*| inputlookup append=true sccm_list.csv | sort 0 -sccm_date |eval  sccm_discovery=strptime(sccm_discovery, "%F") | where sccm_discovery >= now()-(60*60*24*90) OR sccm_date>= now()-(60*60*24*90) | eval sccm_date=strftime(sccm_date, "%F"), sccm_discovery=strftime(sccm_discovery, "%F") | stats first(*) as * by sccm_id2
iseval = 0

[sccm_list_start]
definition = `compliance_index` sourcetype=microsoft:* | rename Name0 as host, Object_GUID0 as sccm_guid, Operating_System_Name_and0 as sccm_os, AD_Site_Name0 as sccm_site, Full_Domain_Name0 as sccm_domain, ResourceID as sccm_id, Build01 as sccm_build, Client_Version0 as sccm_version, Distinguished_Name0 as sccm_ou, Last_Logon_Timestamp0 as sccm_lastlogin, SID0 as sccm_sid | eval host=lower(host), sccm_domain=lower(sccm_domain), sccm_guid=lower(sccm_guid), sccm_os=lower(sccm_os), sccm_site=lower(sccm_site), sccm_ou=lower(sccm_ou) | eval sccm_fqdn=host.".".sccm_domain | eval sccm_discovery=strftime(_time,"%F") | eval sccm_lastlogin=strptime(sccm_lastlogin, "%Y-%m-%d") | eval sccm_lastlogin=strftime(sccm_lastlogin, "%F") | eval sccm=1 | table host sccm* domain | inputlookup append=true sccm_list.csv | stats first(sccm*) as sccm*  by host | rex max_match=0 field=sccm_id "^(?<sccm_id2>\d+\d+\d+)" | fields - sccm_id | mvexpand sccm_id2 | eval sccm_date=strptime(sccm_date, "%Y-%m-%d" ) | eval sccm_managed=if(sccm_date >= now()-(60*60*24*30) AND isnotnull(sccm_id2), "1", "0") | eval sccm_date=strftime(sccm_date, "%F")
iseval = 0

[sccm_list_update]
definition = inputlookup append=t sccm_list.csv |  stats first(host) as host, values(sccm) as sccm, first(sccm_build) as sccm_build, values(sccm_domain) as sccm_domain, values(sccm_fqdn) as sccm_fqdn, first(sccm_discovery) as sccm_discovery, values(sccm_guid) as sccm_guid,first(sccm_date) as sccm_date, first(sccm_lastlogin) as sccm_lastlogin, first(sccm_managed) as sccm_managed, first(sccm_os) as sccm_os, values(sccm_ou) as sccm_ou, values(sccm_sid) as sccm_sid, values(sccm_site) as sccm_site, values(sccm_version) as sccm_version, values(sccm_subnet) as sccm_subnet by sccm_id
iseval = 0

[sccm_patch_update]
definition = `compliance_index` sourcetype=microsoft:sccm:collections \
	| fields ResourceID HostName CollectionName \
	| where NOT LIKE(CollectionName, "%Patch Deployment%")\
	| rex field=CollectionName "(?:Maintenance\sWindow\s(?:\-\s|)|)(?<MaintenanceWindow>.*)" \
	| eval RebootCycle=case(MaintenanceWindow LIKE "%Auto Reboot%", "Reboot", MaintenanceWindow LIKE "%Manual%", "Manual", MaintenanceWindow LIKE "%No reboot%", "No Reboot", MaintenanceWindow LIKE "%(Reboot)%", "Reboot", MaintenanceWindow LIKE "%1 Reboot%", "Reboot")\
	| eval patch=case(MaintenanceWindow LIKE "%1. Tues%", "Tues_1", MaintenanceWindow LIKE "%2. Thurs%", "Thurs_2", MaintenanceWindow LIKE "%3. Sat%", "Sat_3", MaintenanceWindow LIKE "%COMPT Phase 2%", "COMPT_2", MaintenanceWindow LIKE "%Comptroller%", "COMPT_1", MaintenanceWindow LIKE "%Exclusion%", "Exclusion", MaintenanceWindow LIKE "%included%", "No Collection")\
	| fields ResourceID HostName  RebootCycle patch\
	| table ResourceID HostName RebootCycle patch\
	| stats values(*) as * by ResourceID\
	|  eval patch=mvjoin(patch,"; "), RebootCycle=mvjoin(RebootCycle,": ")\
	|  eval ResourceID=lower(ResourceID), HostName=lower(HostName), patch=lower(patch), RebootCycle=lower(RebootCycle) \
	| rename ResourceID as sccm_id2, HostName as host, patch as sccm_patchwindow, RebootCycle as sccm_patchcycle
iseval = 0

[splunk_asset_update]
definition = index=_internal sourcetype=splunkd source=*splunkd.log log_level=INFO ("My GUID is" OR "Running phone uri") (component=ServerConfig OR component=HttpPubSubConnection) |fields host message _raw\
	| rex field=_raw "Running phone uri=\/services\/broker\/phonehome\/connection_(?<splunk_ip>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})_\d{4}_(?:\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}|(?<splunk_fqdn>[^_]+))_([^_]+_)*(?<splunk_guid>[0-9a-zA-Z]{8}-[0-9a-zA-Z]{4}-[0-9a-zA-Z]{4}-[0-9a-zA-Z]{4}-[0-9a-zA-Z]{12})$"\
	| rex field=_raw "My GUID is (?<splunk_guid>.*)" \
	| stats latest(_time) as _time latest(splunk*) as splunk* by host\
	| eval splunk=1, splunk_date=strftime(_time,"%F"), host=lower(host), splunk_guid=lower(splunk_guid), splunk_fqdn=lower(splunk_fqdn)\
	| rex field=splunk_fqdn "^[\w\-\d]*(?:\.(?<splunk_domain>[^\s]+)|\.|$)"\
	| fields - _time
iseval = 0

[tanium_list_update]
definition = inputlookup append=t asset_list_tanium.csv \
	| stats first(*) as * by host \
	| eval tanium_managed=if(tanium_id=0,"0","1") \
	| eval tanium=1 \
	| fillnull value=" " tip1 tip2 \
	| eval tip3=tip1." ".tip2 \
	| rex max_match=0 field=tip3 "(?<tanium_ip>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d+)" \
	| where NOT LIKE(tanium_ip, "%0.0.0.0%")\
	| eval tanium_date=strptime(tanium_date, "%F") \
	| where tanium_date >= now()-(60*60*24*90) \
	|  eval tanium_date=strftime(tanium_date, "%F") \
	| eval tanium_domain=lower(tanium_domain)\
	| mvexpand tanium_ip \
	| stats first(tanium*) as tanium* by host \
	| replace "*-days" with * in tanium_uptime \
	| replace "Less-than-1-day" with "1" in tanium_uptime
iseval = 0

[user_update]
definition = rename adminCount as user_admin, cn as user_cn, company as user_company, department as user_dept, description as user_description, displayName as user_display, distinguishedName as user_dn, employeeID as user_id, employeeType as user_type, givenName as user_firstname, homeDirectory as user_home, initials as user_middle, lastLogonTimestamp as user_lastlogon, mail as user_email, name as user_name, objectSid as user_sid, roomNumber, as user_room, sAMAccountName as user_sam, sn, as user_lastname, uid as user_uid, userAccountControl as user_uac, userPrincipalName as user_upn, whenChanged as user_changed, whenCreated as user_created, objectSid as user_sid\
	| eval user_admin=lower(user_admin), user_changed=lower(user_changed), user_cn=lower(user_cn), user_description=lower(user_description), user_company=lower(user_company), user_dept=lower(user_dept), user_display=lower(user_display), user_dn=lower(user_dn), user_id=lower(user_id), user_room=lower(user_room), user_type=lower(user_type), user_firstname=lower(user_firstname), user_home=lower(user_home), user_middle=lower(user_middle), user_lastlogon=lower(user_lastlogon), user_email=lower(user_email), user_name=lower(user_name), user_sid=lower(user_sid), user_sam=lower(user_sam), user_lastname=lower(user_lastname), user_uid=lower(user_uid), user_uac=lower(user_uac), user_upn=lower(user_upn), user_changed=lower(user_changed), user_created=lower(user_created), user_sid=lower(user_sid) \
	| eval user_date=strftime(_time, "%F") \
	| where NOT (user_dn LIKE "%servers%") AND NOT (user_dn LIKE "%controllers%") AND NOT (user_dn LIKE "%computers%") AND NOT (user_dn LIKE "%workstations%") AND NOT (user_dn LIKE "%mailboxes%") AND NOT (user_dn LIKE "%management processors%") AND NOT (user_uac LIKE "%workstation%") \
	| rex field=user_created "^(?<user_created1>\d{8})" \
	| eval user_created1=strptime(user_created1, "%Y%m%d") \
	| eval user_created1=strftime(user_created1, "%F") \
	| rex field=user_changed "^(?<user_changed1>\d{8})" \
	| eval user_changed1=strptime(user_changed1, "%Y%m%d") \
	| eval user_changed1=strftime(user_changed1, "%F") \
	| rex field=user_lastlogon "^(?<user_lastlogon1>\d{4}\-\d{2}\-\d{2})" \
	| eval user_lastlogon1=strptime(user_lastlogon1, "%F") \
	| eval user_lastlogon1=strftime(user_lastlogon1, "%F") \
	| eval user_domain="dmz" \
	| eval user=1 \
	| eval user_service=if(user_dn LIKE "%ou=service%", "1", "0") \
	| eval user_admin=if(user_dn LIKE "%admin%", "1", "0") \
	| rex field=user_dn "^cn=(?<user_ln>\w+)\\\," \
	| rex field=user_email "(?<user_ln2>\w+)\.\w{3}\@" \
	| rex field=user_ln2 "(?<user_ln2>\D+)" \
	| rex field=user_dn "^cn=\w+\\\,\s{1}(?<user_fn>\w+)\s" \
	| rex field=user_email "(?<user_fn2>\w+)\." \
	| eval user_firstname=case(isnotnull(user_firstname), user_firstname, isnotnull(user_fn), user_fn, isnotnull(user_fn2), user_fn2) \
	| eval user_lastname=case(isnotnull(user_lastname), user_lastname, isnotnull(user_ln), user_ln, isnotnull(user_ln2), user_ln2) \
	| fillnull value=" " user_middle \
	| eval user_fullname=user_lastname.", ".user_firstname." ".user_middle \
	| eval user_fullname=case(isnotnull(user_fullname), user_fullname, isnull(user_fullname), user_cn, isnull(user_fullname), user_display) \
	| eval user_samx=user_domain.".".user_sam \
	| eval user_fullnamex=user_domain.".".user_fullname \
	| rex field=user_dn "(?<user_dn1>ou=.*?)\,dc" \
	| eval user_disabled=if(user_uac LIKE "%accountdisable%", "1", "0") \
	| eval user_passexpire=if(user_uac LIKE "%dont_expire_passwd%", "0", "1") \
	| eval user_cac=if(user_uac LIKE "%smartcard_required%", "1", "0")\
	|eval user_room=if(isnull(user_room),"null",user_room)\
	| fields - user_changed user_created user_lastlogon user_cn user_dn user_display user_name user_fn user_fn2 user_uac user_ln user_ln2 _time
iseval = 0

[cylance_list_update]
definition = search index=cylance_protect (sourcetype=syslog_device OR sourcetype=syslog_script_control)\
	| eval cylance=1\
	| eval date_month=case(date_month=="jan","01",date_month=="feb","02",date_month=="mar","03",date_month=="apr","04",date_month=="may","05",date_month=="jun","06",date_month=="jul","07",date_month=="aug","08",date_month=="sep","09",date_month=="oct",10,date_month=="nov",11,date_month=="dec",12)\
	| eval cylance_date=strftime(strptime(date_year+"-"+date_month+"-"+date_mday+" "+date_hour+":"+date_minute+":"+date_second+" "+date_zone, "%Y-%m-%d %H:%M:%S"), "%Y-%m-%d %H:%M:%S")\
	| eval cylance_timezone = date_zone\
	| fields cylance,cylance_date,tz,DeviceName, dest_ip,MAC, OS, Tenant, ZoneNames, AgentVersion, InterpreterVersion, EventName\
	| eval host=lower(DeviceName)\
	| eval cylance_fdqn=DeviceName+".hq.jdi.army.mil"\
	| eval cylance_date_new=cylance_date\
	| eval cylance_domain="hq.jdi.army.mil"\
	| rename DeviceName as cylance_netbiosname, dest_ip as cylance_ip, MAC as cylance_mac, OS as cylance_os, Tenant as cylance_tenant, ZoneNames as cylance_zonenames, InterpreterVersion as cylance_interpreterversion, AgentVersion as cylance_agentversion, EventName as cylance_eventname
iseval = 0

[asset_list_ise]
definition = `networkauth_index` sourcetype=cisco:ise:syslog\
	| dedup src_ip\
	| eval ise=1, ise_version=Version, ise_vendoraction=vendor_action, ise_ip=src_ip, ise_mac=MacAddress, ise_date=strftime(_time,"%Y-%m-%d"), ip=src_ip, DNS=lower(DNS)\
	| rex field=DNS "(?<ise_netbiosname>[^\.]+)\.(?<ise_domain>[^\\\]+)"\
	| rex field=DNS "(?<ise_fqdn>[^\\\]+)"\
	| rex mode=sed field=ise_ip "s/\\\//g"\
	| rex mode=sed field=ise_mac "s/\\\//g"\
	| eval ip = ise_ip, host=ise_netbiosname\
	| fields host, ip, ise, ise_version, ise_date, ise_ip, ise_mac, ise_domain, ise_version, ise_vendoraction, ise_fqdn, ise_netbiosname
iseval = 0

